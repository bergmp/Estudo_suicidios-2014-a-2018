# importando as bibliotecas necess√°rias
import sqlite3

import pandas as pd
import plotly.express as px
import streamlit as st


# fun√ß√£o para conectar ao banco de dados SQLite
@st.cache_data
def load_data():
    conn = sqlite3.connect("suicidios_tratado.db")
    df = pd.read_sql_query("SELECT * FROM suicidios_tratado", conn)
    conn.close()
    return df


# main
def main():
    # configura√ß√µes da p√°gina
    st.set_page_config(
        page_title="Diferen√ßas demogr√°ficas", page_icon="üìä", layout="wide"
    )

    st.title("3. Diferen√ßas demogr√°ficas")

    # carregar dados
    df = load_data()

    st.markdown("#### Homens x Mulheres")

    # quantidade de obitos por sexo e ano
    df_tempo_sexo = df.groupby(["ano_obito", "sexo"]).count()["uf_obito"]
    df_tempo_sexo = df_tempo_sexo.reset_index().rename(
        columns={"uf_obito": "qtd_obitos"}
    )

    # separando os homens
    df_homens = df_tempo_sexo[df_tempo_sexo["sexo"] == "Masculino"]

    # separando as mulheres
    df_mulheres = df_tempo_sexo[df_tempo_sexo["sexo"] == "Feminino"]

    # criando 2 colunas para exibi√ß√£o dos gr√°ficos lado a lado
    col1, col2 = st.columns(2)

    # criando o gr√°fico de linha dos homens
    fig_homem = px.line(
        df_homens,
        x="ano_obito",
        y="qtd_obitos",
        title="Evolu√ß√£o dos suic√≠dios no Brasil, Homens",
        markers=True,
        template="ggplot2",
        text="qtd_obitos",
    )

    # posi√ß√£o do texto
    fig_homem.update_traces(textposition="top center")

    fig_homem.update_layout(
        xaxis_title="Ano",
        yaxis_title="Quantidade de √≥bitos",
        font=dict(size=12, color="#000000"),
    )

    # centralizar o titulo
    fig_homem.update_layout(title_x=0.5)

    # eixo x com intervalo de 1 ano
    fig_homem.update_xaxes(dtick=1)

    # mudar cor da linha
    fig_homem.update_traces(line_color="blue")

    # adicionando o grafico na coluna 1
    col1.plotly_chart(fig_homem, use_container_width=True)

    # criando o gr√°fico de linha das mulheres
    fig_mulher = px.line(
        df_mulheres,
        x="ano_obito",
        y="qtd_obitos",
        title="Evolu√ß√£o dos suic√≠dios no Brasil, Mulheres",
        markers=True,
        template="ggplot2",
        text="qtd_obitos",
    )

    # posi√ß√£o do texto
    fig_mulher.update_traces(textposition="top center")

    fig_mulher.update_layout(
        xaxis_title="Ano",
        yaxis_title="Quantidade de √≥bitos",
        font=dict(size=12, color="#000000"),
    )

    # centralizar o titulo
    fig_mulher.update_layout(title_x=0.5)

    # eixo x com intervalo de 1 ano
    fig_mulher.update_xaxes(dtick=1)

    # mudar cor da linha
    fig_mulher.update_traces(line_color="blue")

    # mudando a cor da linha
    fig_mulher.update_traces(line_color="pink")

    # adicionando o grafico na coluna 2
    col2.plotly_chart(fig_mulher, use_container_width=True)

    # grafico de ambos para compara√ß√£o
    fig_ambos = px.line(
        df_tempo_sexo,
        x="ano_obito",
        y="qtd_obitos",
        color="sexo",
        title="Evolu√ß√£o dos suic√≠dios no Brasil por sexo",
        markers=True,
        template="ggplot2",
        text="qtd_obitos",
    )

    # adicionando nomes aos eixos
    fig_ambos.update_layout(
        xaxis_title="Ano",
        yaxis_title="Quantidade de √≥bitos",
        font=dict(size=12, color="#000000"),
    )

    # centralizar o titulo
    fig_ambos.update_layout(title_x=0.5)

    # alterar cor da linha Masculino e Feminino
    fig_ambos.update_traces(line_color="blue", selector=dict(name="Masculino"))
    fig_ambos.update_traces(line_color="pink", selector=dict(name="Feminino"))

    # posi√ß√£o do texto
    fig_ambos.update_traces(textposition="top center")
    # eixo x com intervalo de 1 ano
    fig_ambos.update_xaxes(dtick=1)

    # adicionando o grafico ao streamlit
    st.plotly_chart(fig_ambos, use_container_width=True)

    # adicionando a conclus√£o ao streamlit
    st.markdown(
        """
        #### Conclus√£o 2:

        De acordo com os gr√°ficos, h√° diferen√ßas significativas nas taxas de suic√≠dio entre homens e mulheres no Brasil de 2014 a 2018. Aqui est√£o algumas observa√ß√µes baseadas nos dados:

        - **Taxas mais altas entre os homens**: Em todos os anos, o n√∫mero de suic√≠dios entre os homens √© consistentemente maior do que entre as mulheres. Por exemplo, em 2018, houve 5.370 suic√≠dios entre os homens, em compara√ß√£o com 1.599 entre as mulheres.

        - **Aumento ao longo do tempo**: Ambos os sexos mostram um aumento no n√∫mero de suic√≠dios ao longo do tempo. No entanto, o aumento √© mais acentuado entre os homens. Por exemplo, o n√∫mero de suic√≠dios entre os homens aumentou de 3.801 em 2014 para 5.370 em 2018. Entre as mulheres, o n√∫mero aumentou de 1.092 em 2014 para 1.599 em 2018.

        Essas tend√™ncias sugerem que, embora as taxas de suic√≠dio estejam aumentando para ambos os sexos, os homens est√£o em maior risco.
        """
    )

    st.markdown(
        """
        ### Suic√≠dios por idade
        """
    )

    # quantidade de obitos por idade
    df_idade = df.groupby("idade").count()["uf_obito"]
    df_idade = df_idade.reset_index().rename(columns={"uf_obito": "qtd_obitos"})
    df_idade["idade"] = df_idade["idade"].abs()

    # criando faixas de idades
    df_idade["faixa_etaria"] = pd.cut(
        df_idade["idade"],
        bins=[0, 9, 19, 29, 39, 49, 59, 69],
        labels=[
            "0 a 9",
            "10 a 19",
            "20 a 29",
            "30 a 39",
            "40 a 49",
            "50 a 59",
            "60 a 69",
        ],
    )

    df_faixa = df_idade.groupby("faixa_etaria").sum()["qtd_obitos"].reset_index()

    # grafico de barras com as faixas de idades
    fig_idade = px.bar(
        df_faixa,
        x="faixa_etaria",
        y="qtd_obitos",
        title="Quantidade de √≥bitos por faixa et√°ria",
        template="ggplot2",
        text="qtd_obitos",
    )

    # nomeando os eixos
    fig_idade.update_layout(
        xaxis_title="Faixa et√°ria",
        yaxis_title="Quantidade de √≥bitos",
        font=dict(size=12, color="#000000"),
    )

    # centralizar o titulo
    fig_idade.update_layout(title_x=0.5)

    # adicionando ao streamlit
    st.plotly_chart(fig_idade, use_container_width=True)

    # adicionando a conclus√£o ao streamlit
    st.markdown(
        """
        #### Conclus√£o 3:
        
        Com base no gr√°fico, podemos observar as seguintes tend√™ncias nos casos de suic√≠dio em rela√ß√£o √†s diferentes faixas et√°rias:

        - **Faixa et√°ria de 0 a 9 anos**: Esta faixa et√°ria tem a menor quantidade de √≥bitos, com 80 casos registrados. Isso pode ser devido √† menor exposi√ß√£o a fatores de risco para o suic√≠dio nessa idade.

        - **Faixa et√°ria de 10 a 19 anos**: H√° um aumento significativo na quantidade de √≥bitos nesta faixa et√°ria, com 2.862 casos. Isso pode ser atribu√≠do a uma variedade de fatores, incluindo o in√≠cio da puberdade e o aumento das press√µes sociais e acad√™micas.

        - **Faixa et√°ria de 20 a 29 anos**: Esta faixa et√°ria tem a maior quantidade de √≥bitos, com 7.375 casos. Isso pode ser devido a uma combina√ß√£o de fatores, incluindo o estresse associado √† transi√ß√£o para a vida adulta e o in√≠cio de carreiras profissionais.

        - **Faixa et√°ria de 30 a 39 anos**: A quantidade de √≥bitos nesta faixa et√°ria √© quase igual √† faixa et√°ria de 20 a 29 anos, com 7.205 casos. Isso pode ser devido a fatores como estresse no trabalho, problemas financeiros e quest√µes familiares.

        - **Faixa et√°ria de 40 a 49 anos**: H√° uma diminui√ß√£o na quantidade de √≥bitos nesta faixa et√°ria, com 5.402 casos. No entanto, o n√∫mero ainda √© significativamente alto.

        - **Faixa et√°ria de 50 a 59 anos**: A quantidade de √≥bitos continua a diminuir nesta faixa et√°ria, com 4.536 casos.

        - **Faixa et√°ria de 60 a 69 anos**: Esta faixa et√°ria tem uma quantidade significativamente menor de √≥bitos, com 2.121 casos. Isso pode ser devido a uma variedade de fatores, incluindo aposentadoria e mudan√ßas no estilo de vida.

        Essas tend√™ncias sugerem que as taxas de suic√≠dio variam significativamente entre diferentes faixas et√°rias. Se destacando os n√∫meros das faixas de 20 a 39, onde os jovens passam a ter mais responsabilidades e press√µes sociais.
        """
    )

    st.markdown(
        """
        ### Suic√≠dios x N√≠vel de escolaridade
    """
    )

    # suicidios por nivel de escolaridade
    df_escolaridade = df.groupby("escolaridade").count()["uf_obito"]

    # renomeando as colunas de df_escolaridade
    df_escolaridade = df_escolaridade.reset_index().rename(
        columns={"uf_obito": "qtd_obitos"}
    )

    # criando o grafico de barra
    fig_escolaridade = px.bar(
        df_escolaridade,
        x="escolaridade",
        y="qtd_obitos",
        title="Quantidade de √≥bitos por n√≠vel de escolaridade",
        template="ggplot2",
        text="qtd_obitos",
    )

    # nomeando os eixos
    fig_escolaridade.update_layout(
        xaxis_title="N√≠vel de escolaridade",
        yaxis_title="Quantidade de √≥bitos",
        font=dict(size=12, color="#000000"),
    )

    # centralizar o titulo
    fig_escolaridade.update_layout(title_x=0.5)

    # adicionando ao streamlit
    st.plotly_chart(fig_escolaridade, use_container_width=True)

    # concluindo
    st.markdown(
        """
        #### Conclus√£o 4:

        Com base no gr√°fico obtido, podemos observar as seguintes tend√™ncias nas quantidades de suic√≠dio entre diferentes grupos demogr√°ficos em rela√ß√£o √†s diferentes n√≠veis de escolaridade:

        - **Nenhuma escolaridade**: Este grupo tem a menor quantidade de √≥bitos, com 1.731 casos. Isso pode ser devido a uma variedade de fatores, incluindo a idade (pessoas muito jovens que ainda n√£o come√ßaram a escola) e o acesso limitado a meios letais.

        - **Educa√ß√£o infantil**: H√° um aumento significativo na quantidade de √≥bitos neste grupo, com 5.096 casos. Isso pode ser atribu√≠do a uma variedade de fatores, incluindo o in√≠cio da puberdade e o aumento das press√µes sociais e acad√™micas.

        - **Ensino fundamental**: Este grupo tem uma quantidade ainda maior de √≥bitos, com 9.529 casos. Isso pode ser devido a uma combina√ß√£o de fatores, incluindo o estresse associado √† transi√ß√£o para a adolesc√™ncia e o in√≠cio de problemas de sa√∫de mental.

        - **Ensino m√©dio**: Este grupo tem a maior quantidade de √≥bitos, com 9.755 casos. Isso pode ser devido a fatores como estresse no trabalho, problemas financeiros e quest√µes familiares.

        - **Gradua√ß√£o**: H√° uma diminui√ß√£o na quantidade de √≥bitos neste grupo, com 3.472 casos. Isso pode ser devido a uma variedade de fatores, incluindo maior estabilidade financeira, melhor acesso a servi√ßos de sa√∫de mental e maior resili√™ncia ao estresse.

        Essas tend√™ncias sugerem que as quantidades de suic√≠dio variam significativamente entre diferentes n√≠veis de escolaridade.
    """
    )

    st.markdown(
        """
        ### Suic√≠dios x Ocupa√ß√£o
        """
    )

    # suicidios por ocupacao
    df_ocupacao = df.groupby("ocupacao").count()["uf_obito"]

    # renomeando as colunas de df_ocupacao
    df_ocupacao = df_ocupacao.reset_index().rename(columns={"uf_obito": "qtd_obitos"})

    # ordenando os valores e mostrando os 10 primeiros
    df_ocupacao_top10 = df_ocupacao.sort_values(ascending=False, by="qtd_obitos").head(
        10
    )

    # grafico treemap com as ocupa√ß√µes com mais suicidios

    fig_ocupacao = px.treemap(
        df_ocupacao_top10,
        path=["ocupacao"],
        values="qtd_obitos",
        color="qtd_obitos",
        hover_data=["ocupacao"],
        color_continuous_scale="RdBu",
        title="Quantidade de √≥bitos por ocupa√ß√£o",
        template="ggplot2",
    )

    # centralizando o titulo
    fig_ocupacao.update_layout(title_x=0.5)

    # mostrando o grafico
    st.plotly_chart(fig_ocupacao, use_container_width=True)

    # concluindo
    st.markdown(
        """
        ### Conclus√£o 5:

        Com base no gr√°fico obtido, podemos observar as seguintes tend√™ncias nas quantidades de suic√≠dio entre diferentes grupos demogr√°ficos em rela√ß√£o √†s diferentes ocupa√ß√µes:

        -**Distribui√ß√£o dos √ìbitos**: A ocupa√ß√£o com o maior n√∫mero de √≥bitos √© ‚ÄúSem Ocupa√ß√£o‚Äù, seguida por ‚ÄúEstudante‚Äù e ‚ÄúAposentado/Pensionista‚Äù. Isso pode indicar que essas ocupa√ß√µes t√™m maior risco de √≥bito, ou simplesmente que h√° mais pessoas nessas ocupa√ß√µes.
    """
    )

    st.markdown("""### Suic√≠dios x Ra√ßa""")

    # suicidios por raca
    df_raca = df.groupby("raca").count()["uf_obito"]

    # renomeando as colunas de df_raca
    df_raca = df_raca.reset_index().rename(columns={"uf_obito": "qtd_obitos"})

    df_raca = df_raca.sort_values(ascending=False, by="qtd_obitos")

    # criando o grafico de pizza
    fig_raca = px.pie(
        df_raca,
        values="qtd_obitos",
        names="raca",
        title="Quantidade de √≥bitos por ra√ßa/cor",
        template="ggplot2",
    )

    # centralizando o titulo
    fig_raca.update_layout(title_x=0.5)

    # mostrando o grafico
    st.plotly_chart(fig_raca, use_container_width=True)

    # concluindo
    st.markdown(
        """
        ### Conclus√£o 6:

        **Distribui√ß√£o de √ìbitos por Ra√ßa**: O gr√°fico mostra que a maioria dos √≥bitos ocorre entre as ra√ßas Branca e Parda, que juntas representam mais de 90% dos √≥bitos. Isso pode indicar que essas ra√ßas t√™m maior risco de √≥bito, ou simplesmente que h√° mais pessoas dessas ra√ßas na popula√ß√£o.
        """
    )

    st.markdown("""### Suic√≠dios x Estado Civil""")

    # suicidios por estado_civil
    df_estado_civil = df.groupby("estado_civil").count()["idade"]

    # renomeando as colunas de df_estado_civil
    df_estado_civil = df_estado_civil.reset_index().rename(
        columns={"idade": "qtd_obitos"}
    )

    df_estado_civil = df_estado_civil.sort_values(ascending=False, by="qtd_obitos")

    # grafico de rosca
    fig_estado_civil = px.pie(
        df_estado_civil,
        values="qtd_obitos",
        names="estado_civil",
        title="Quantidade de √≥bitos por estado civil",
        template="seaborn",
        hole=0.6,
    )

    # centralizando o titulo
    fig_estado_civil.update_layout(title_x=0.5)

    # mostrando o grafico
    st.plotly_chart(fig_estado_civil, use_container_width=True)

    # concluindo
    st.markdown(
        """
        ### Conclus√£o 7:

        **Distribui√ß√£o de √ìbitos por Estado Civil**: O gr√°fico mostra que a maioria dos √≥bitos ocorre entre as pessoas solteiras, que representam mais de 50% dos √≥bitos. Mas quando somamos os solteiro e casados temos mais de 70% dos √≥bitos. Isso pode indicar que esses estados civis t√™m maior risco de √≥bito.
    """
    )

    st.markdown("""### Suic√≠dios x Assist√™ncia M√©dica""")

    # suicidios por assistencia_medica
    df_assistencia_medica = df.groupby("assistencia_medica").count()["uf_obito"]

    # renomeando as colunas de df_assistencia_medica
    df_assistencia_medica = df_assistencia_medica.reset_index().rename(
        columns={"uf_obito": "qtd_obitos"}
    )

    # criando uma coluna com os valores em porcentagem
    df_assistencia_medica["percentual"] = (
        df_assistencia_medica["qtd_obitos"] / df_assistencia_medica["qtd_obitos"].sum()
    ) * 100

    df_assistencia_medica = df_assistencia_medica.sort_values(
        ascending=False, by="qtd_obitos"
    ).round(2)

    fig_assistencia_medica = px.bar(
        df_assistencia_medica,
        x="assistencia_medica",
        y="qtd_obitos",
        title="Quantidade de √≥bitos por assist√™ncia m√©dica",
        template="ggplot2",
        text="qtd_obitos",
    )

    # nomeando os eixos
    fig_assistencia_medica.update_layout(
        xaxis_title="Assist√™ncia m√©dica",
        yaxis_title="Quantidade de √≥bitos",
        font=dict(size=12, color="#000000"),
    )

    # centralizando o titulo
    fig_assistencia_medica.update_layout(title_x=0.5)

    # mostrando o grafico
    st.plotly_chart(fig_assistencia_medica, use_container_width=True)

    # concluindo
    st.markdown(
        """
        ### Conclus√£o 8:

        **Distribui√ß√£o de √ìbitos por Assist√™ncia M√©dica**: O gr√°fico mostra que a maioria esmagadora dos √≥bitos ocorre entre as pessoas que n√£o tiveram assist√™ncia m√©dica, que representam quase 80% dos √≥bitos. Isso indica que essas pessoas t√™m maior risco de √≥bito.
        """
    )


# executando a funcao main
if __name__ == "__main__":
    main()
